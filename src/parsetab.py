
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLORleftLANDleftLNOTleftANDleftEQNEleftGTGELTLEleftPLUSMINUSleftTIMESMODAND BREAK COMMA ELSE EQ EQUALS FOR GE GT HEADER ID IF INCLUDE INT LAND LBRACE LBRACKET LE LNOT LOR LPAREN LT MINUS MM MOD NE NUMBER PLUS PP RBRACE RBRACKET RETURN RPAREN SEMI STRING TIMES VOID WHILEtranslation_unit : external_declarationtranslation_unit : translation_unit external_declarationexternal_declaration : include_headerempty : include_header : INCLUDE HEADERexternal_declaration : function_definitionfunction_definition : id_declaration arguments compound_statementarguments : LPAREN args RPARENargs : empty\n            | VOID\n            | INT ID\n            | INT ID COMMA INT ID\n            external_declaration : declarationdeclaration : init_declaration SEMI\n                   init_declaration : id_declaration\n                        | id_declaration LBRACKET NUMBER RBRACKET\n                        | id_declaration EQUALS expressionid_declaration : VOID ID\n                      | INT ID\n                      external_declaration : SEMIstatement : compound_statement\n                 | expression_statement\n                 | jump_statement\n                 | loop_statement\n                 | condition_statement\n                 jump_statement : BREAK SEMI\n                      | RETURN SEMI\n                      | RETURN expression SEMI\n    loop_statement : FOR LPAREN expression_statement expression_statement expression_statement RPAREN statement\n                      | FOR LPAREN expression_statement expression_statement expression RPAREN statement\n                      | WHILE LPAREN expression RPAREN statement\n    condition_statement  :   IF LPAREN expression RPAREN statement ELSE statement empty\n                            |   IF LPAREN expression RPAREN statement\n                            |   IF LPAREN expression LOR expression RPAREN  statement ELSE statement\n    compound_statement : LBRACE declaration_list RBRACE\n                          | LBRACE declaration_list statement_list RBRACE\n                          | LBRACE statement_list RBRACE\n                          | LBRACE RBRACE\n                          declaration_list : declaration\n                        | declaration_list declaration\n                        expression_statement : SEMI\n                            | expression SEMI\n                            statement_list : statement\n                      | statement_list statementexpression : conditional_expression\n                  | unary_expression EQUALS expression\n                  | STRING \n                  unary_expression : LNOT termfunction_call : ID LPAREN expression_list RPAREN \n                     | ID LPAREN RPARENexpression_list : expression\n                       | expression_list COMMA expressionunary_expression : function_call\n                        expression : PP unary_expression\n                  | MM unary_expression\n                  | unary_expression PP\n                  | unary_expression MM\n                  unary_expression : AND term\n                        term : ID\n            | ID LBRACKET NUMBER RBRACKET\n            | ID LBRACKET ID RBRACKETterm : factorfactor : NUMBERfactor : LPAREN expression RPARENunary_expression : term\n                        | unary_expression LT term\n                        | unary_expression LE term\n                        | unary_expression GE term\n                        | unary_expression GT term\n                        | unary_expression EQ term\n                        | unary_expression NE term \n                        | unary_expression AND term \n                        | unary_expression LAND unary_expression\n                        | unary_expression PLUS term\n                        | unary_expression TIMES term\n                        | unary_expression MOD term\n                        | unary_expression MINUS term\n                        conditional_expression : unary_expression'
    
_lr_action_items = {'SEMI':([0,1,2,3,4,5,6,8,9,12,13,18,19,20,21,22,24,25,26,27,31,32,34,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,62,63,76,77,78,79,80,86,87,88,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,119,120,123,125,126,128,129,130,135,136,137,139,140,141,142,143,144,145,147,148,149,],[6,6,-1,-3,-6,-13,-20,-15,18,-2,-5,-14,-18,-19,-7,47,-17,-45,-78,-47,-65,-53,-59,-63,-62,47,-38,47,-39,-43,-41,-21,-22,-23,-24,-25,-15,91,92,93,-16,-56,-57,-54,-55,-48,-59,-58,-35,47,-40,-37,-44,-42,-26,-27,119,47,-46,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-50,-64,-36,-28,47,-49,-61,-60,47,47,47,91,-31,-33,47,47,47,47,-29,-30,-4,-32,47,-34,]),'INCLUDE':([0,1,2,3,4,5,6,12,13,18,21,43,86,89,118,],[7,7,-1,-3,-6,-13,-20,-2,-5,-14,-7,-38,-35,-37,-36,]),'VOID':([0,1,2,3,4,5,6,12,13,17,18,21,22,42,43,45,86,88,89,118,],[10,10,-1,-3,-6,-13,-20,-2,-5,40,-14,-7,10,10,-38,-39,-35,-40,-37,-36,]),'INT':([0,1,2,3,4,5,6,12,13,17,18,21,22,42,43,45,86,88,89,117,118,],[11,11,-1,-3,-6,-13,-20,-2,-5,41,-14,-7,11,11,-38,-39,-35,-40,-37,127,-36,]),'$end':([1,2,3,4,5,6,12,13,18,21,43,86,89,118,],[0,-1,-3,-6,-13,-20,-2,-5,-14,-7,-38,-35,-37,-36,]),'HEADER':([7,],[13,]),'LBRACKET':([8,19,20,34,53,79,],[15,-18,-19,82,15,82,]),'EQUALS':([8,19,20,26,31,32,34,36,37,53,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,112,116,123,125,126,],[16,-18,-19,61,-65,-53,-59,-63,-62,16,-48,-59,-58,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-50,-64,-49,-61,-60,]),'LPAREN':([8,16,18,19,20,22,28,29,30,33,34,35,42,43,44,45,46,47,48,49,50,51,52,56,57,58,59,61,64,65,66,67,68,69,70,71,72,73,74,75,81,86,87,88,89,90,91,92,93,95,96,97,118,119,120,124,128,129,130,131,136,137,139,140,141,142,143,144,145,147,148,149,],[17,35,-14,-18,-19,35,35,35,35,35,81,35,35,-38,35,-39,-43,-41,-21,-22,-23,-24,-25,35,95,96,97,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-35,35,-40,-37,-44,-42,-26,-27,35,35,35,-36,-28,35,35,35,35,35,35,-31,-33,35,35,35,35,-29,-30,-4,-32,35,-34,]),'ID':([10,11,16,18,22,28,29,30,33,35,41,42,43,44,45,46,47,48,49,50,51,52,56,61,64,65,66,67,68,69,70,71,72,73,74,75,81,82,86,87,88,89,90,91,92,93,95,96,97,118,119,120,124,127,128,129,130,131,136,137,139,140,141,142,143,144,145,147,148,149,],[19,20,34,-14,34,34,34,79,79,34,85,34,-38,34,-39,-43,-41,-21,-22,-23,-24,-25,34,34,79,79,79,79,79,79,79,34,79,79,79,79,34,114,-35,34,-40,-37,-44,-42,-26,-27,34,34,34,-36,-28,34,34,133,34,34,34,34,-31,-33,34,34,34,34,-29,-30,-4,-32,34,-34,]),'LBRACE':([14,18,22,42,43,44,45,46,47,48,49,50,51,52,84,86,87,88,89,90,91,92,93,118,119,129,130,136,137,139,140,141,142,143,144,145,147,148,149,],[22,-14,22,22,-38,22,-39,-43,-41,-21,-22,-23,-24,-25,-8,-35,22,-40,-37,-44,-42,-26,-27,-36,-28,22,22,-31,-33,22,22,22,22,-29,-30,-4,-32,22,-34,]),'NUMBER':([15,16,18,22,28,29,30,33,35,42,43,44,45,46,47,48,49,50,51,52,56,61,64,65,66,67,68,69,70,71,72,73,74,75,81,82,86,87,88,89,90,91,92,93,95,96,97,118,119,120,124,128,129,130,131,136,137,139,140,141,142,143,144,145,147,148,149,],[23,36,-14,36,36,36,36,36,36,36,-38,36,-39,-43,-41,-21,-22,-23,-24,-25,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,115,-35,36,-40,-37,-44,-42,-26,-27,36,36,36,-36,-28,36,36,36,36,36,36,-31,-33,36,36,36,36,-29,-30,-4,-32,36,-34,]),'STRING':([16,18,22,35,42,43,44,45,46,47,48,49,50,51,52,56,61,81,86,87,88,89,90,91,92,93,95,96,97,118,119,120,124,128,129,130,131,136,137,139,140,141,142,143,144,145,147,148,149,],[27,-14,27,27,27,-38,27,-39,-43,-41,-21,-22,-23,-24,-25,27,27,27,-35,27,-40,-37,-44,-42,-26,-27,27,27,27,-36,-28,27,27,27,27,27,27,-31,-33,27,27,27,27,-29,-30,-4,-32,27,-34,]),'PP':([16,18,22,26,31,32,34,35,36,37,42,43,44,45,46,47,48,49,50,51,52,56,61,78,79,80,81,86,87,88,89,90,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,119,120,123,124,125,126,128,129,130,131,136,137,139,140,141,142,143,144,145,147,148,149,],[28,-14,28,62,-65,-53,-59,28,-63,-62,28,-38,28,-39,-43,-41,-21,-22,-23,-24,-25,28,28,-48,-59,-58,28,-35,28,-40,-37,-44,-42,-26,-27,28,28,28,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-50,-64,-36,-28,28,-49,28,-61,-60,28,28,28,28,-31,-33,28,28,28,28,-29,-30,-4,-32,28,-34,]),'MM':([16,18,22,26,31,32,34,35,36,37,42,43,44,45,46,47,48,49,50,51,52,56,61,78,79,80,81,86,87,88,89,90,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,119,120,123,124,125,126,128,129,130,131,136,137,139,140,141,142,143,144,145,147,148,149,],[29,-14,29,63,-65,-53,-59,29,-63,-62,29,-38,29,-39,-43,-41,-21,-22,-23,-24,-25,29,29,-48,-59,-58,29,-35,29,-40,-37,-44,-42,-26,-27,29,29,29,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-50,-64,-36,-28,29,-49,29,-61,-60,29,29,29,29,-31,-33,29,29,29,29,-29,-30,-4,-32,29,-34,]),'LNOT':([16,18,22,28,29,35,42,43,44,45,46,47,48,49,50,51,52,56,61,71,81,86,87,88,89,90,91,92,93,95,96,97,118,119,120,124,128,129,130,131,136,137,139,140,141,142,143,144,145,147,148,149,],[30,-14,30,30,30,30,30,-38,30,-39,-43,-41,-21,-22,-23,-24,-25,30,30,30,30,-35,30,-40,-37,-44,-42,-26,-27,30,30,30,-36,-28,30,30,30,30,30,30,-31,-33,30,30,30,30,-29,-30,-4,-32,30,-34,]),'AND':([16,18,22,26,28,29,31,32,34,35,36,37,42,43,44,45,46,47,48,49,50,51,52,56,61,71,76,77,78,79,80,81,86,87,88,89,90,91,92,93,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,119,120,123,124,125,126,128,129,130,131,136,137,139,140,141,142,143,144,145,147,148,149,],[33,-14,33,70,33,33,-65,-53,-59,33,-63,-62,33,-38,33,-39,-43,-41,-21,-22,-23,-24,-25,33,33,33,70,70,-48,-59,-58,33,-35,33,-40,-37,-44,-42,-26,-27,33,33,33,-66,-67,-68,-69,-70,-71,-72,70,-74,-75,-76,-77,-50,-64,-36,-28,33,-49,33,-61,-60,33,33,33,33,-31,-33,33,33,33,33,-29,-30,-4,-32,33,-34,]),'RPAREN':([17,25,26,27,31,32,34,36,37,38,39,40,47,62,63,76,77,78,79,80,81,83,85,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,121,122,123,125,126,132,133,134,135,138,],[-4,-45,-78,-47,-65,-53,-59,-63,-62,84,-9,-10,-41,-56,-57,-54,-55,-48,-59,-58,112,116,-11,-42,-46,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,123,-50,-51,-64,129,130,-49,-61,-60,-52,-12,139,140,142,]),'RBRACE':([18,22,42,43,44,45,46,47,48,49,50,51,52,86,87,88,89,90,91,92,93,118,119,136,137,143,144,145,147,149,],[-14,43,86,-38,89,-39,-43,-41,-21,-22,-23,-24,-25,-35,118,-40,-37,-44,-42,-26,-27,-36,-28,-31,-33,-29,-30,-4,-32,-34,]),'BREAK':([18,22,42,43,44,45,46,47,48,49,50,51,52,86,87,88,89,90,91,92,93,118,119,129,130,136,137,139,140,141,142,143,144,145,147,148,149,],[-14,55,55,-38,55,-39,-43,-41,-21,-22,-23,-24,-25,-35,55,-40,-37,-44,-42,-26,-27,-36,-28,55,55,-31,-33,55,55,55,55,-29,-30,-4,-32,55,-34,]),'RETURN':([18,22,42,43,44,45,46,47,48,49,50,51,52,86,87,88,89,90,91,92,93,118,119,129,130,136,137,139,140,141,142,143,144,145,147,148,149,],[-14,56,56,-38,56,-39,-43,-41,-21,-22,-23,-24,-25,-35,56,-40,-37,-44,-42,-26,-27,-36,-28,56,56,-31,-33,56,56,56,56,-29,-30,-4,-32,56,-34,]),'FOR':([18,22,42,43,44,45,46,47,48,49,50,51,52,86,87,88,89,90,91,92,93,118,119,129,130,136,137,139,140,141,142,143,144,145,147,148,149,],[-14,57,57,-38,57,-39,-43,-41,-21,-22,-23,-24,-25,-35,57,-40,-37,-44,-42,-26,-27,-36,-28,57,57,-31,-33,57,57,57,57,-29,-30,-4,-32,57,-34,]),'WHILE':([18,22,42,43,44,45,46,47,48,49,50,51,52,86,87,88,89,90,91,92,93,118,119,129,130,136,137,139,140,141,142,143,144,145,147,148,149,],[-14,58,58,-38,58,-39,-43,-41,-21,-22,-23,-24,-25,-35,58,-40,-37,-44,-42,-26,-27,-36,-28,58,58,-31,-33,58,58,58,58,-29,-30,-4,-32,58,-34,]),'IF':([18,22,42,43,44,45,46,47,48,49,50,51,52,86,87,88,89,90,91,92,93,118,119,129,130,136,137,139,140,141,142,143,144,145,147,148,149,],[-14,59,59,-38,59,-39,-43,-41,-21,-22,-23,-24,-25,-35,59,-40,-37,-44,-42,-26,-27,-36,-28,59,59,-31,-33,59,59,59,59,-29,-30,-4,-32,59,-34,]),'RBRACKET':([23,114,115,],[60,125,126,]),'COMMA':([25,26,27,31,32,34,36,37,62,63,76,77,78,79,80,85,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,123,125,126,132,],[-45,-78,-47,-65,-53,-59,-63,-62,-56,-57,-54,-55,-48,-59,-58,117,-46,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,124,-50,-51,-64,-49,-61,-60,-52,]),'LOR':([25,26,27,31,32,34,36,37,62,63,76,77,78,79,80,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,122,123,125,126,],[-45,-78,-47,-65,-53,-59,-63,-62,-56,-57,-54,-55,-48,-59,-58,-46,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-50,-64,131,-49,-61,-60,]),'LT':([26,31,32,34,36,37,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,112,116,123,125,126,],[64,-65,-53,-59,-63,-62,64,64,-48,-59,-58,-66,-67,-68,-69,-70,-71,-72,64,-74,-75,-76,-77,-50,-64,-49,-61,-60,]),'LE':([26,31,32,34,36,37,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,112,116,123,125,126,],[65,-65,-53,-59,-63,-62,65,65,-48,-59,-58,-66,-67,-68,-69,-70,-71,-72,65,-74,-75,-76,-77,-50,-64,-49,-61,-60,]),'GE':([26,31,32,34,36,37,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,112,116,123,125,126,],[66,-65,-53,-59,-63,-62,66,66,-48,-59,-58,-66,-67,-68,-69,-70,-71,-72,66,-74,-75,-76,-77,-50,-64,-49,-61,-60,]),'GT':([26,31,32,34,36,37,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,112,116,123,125,126,],[67,-65,-53,-59,-63,-62,67,67,-48,-59,-58,-66,-67,-68,-69,-70,-71,-72,67,-74,-75,-76,-77,-50,-64,-49,-61,-60,]),'EQ':([26,31,32,34,36,37,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,112,116,123,125,126,],[68,-65,-53,-59,-63,-62,68,68,-48,-59,-58,-66,-67,-68,-69,-70,-71,-72,68,-74,-75,-76,-77,-50,-64,-49,-61,-60,]),'NE':([26,31,32,34,36,37,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,112,116,123,125,126,],[69,-65,-53,-59,-63,-62,69,69,-48,-59,-58,-66,-67,-68,-69,-70,-71,-72,69,-74,-75,-76,-77,-50,-64,-49,-61,-60,]),'LAND':([26,31,32,34,36,37,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,112,116,123,125,126,],[71,-65,-53,-59,-63,-62,71,71,-48,-59,-58,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-50,-64,-49,-61,-60,]),'PLUS':([26,31,32,34,36,37,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,112,116,123,125,126,],[72,-65,-53,-59,-63,-62,72,72,-48,-59,-58,-66,-67,-68,-69,-70,-71,-72,72,-74,-75,-76,-77,-50,-64,-49,-61,-60,]),'TIMES':([26,31,32,34,36,37,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,112,116,123,125,126,],[73,-65,-53,-59,-63,-62,73,73,-48,-59,-58,-66,-67,-68,-69,-70,-71,-72,73,-74,-75,-76,-77,-50,-64,-49,-61,-60,]),'MOD':([26,31,32,34,36,37,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,112,116,123,125,126,],[74,-65,-53,-59,-63,-62,74,74,-48,-59,-58,-66,-67,-68,-69,-70,-71,-72,74,-74,-75,-76,-77,-50,-64,-49,-61,-60,]),'MINUS':([26,31,32,34,36,37,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,112,116,123,125,126,],[75,-65,-53,-59,-63,-62,75,75,-48,-59,-58,-66,-67,-68,-69,-70,-71,-72,75,-74,-75,-76,-77,-50,-64,-49,-61,-60,]),'ELSE':([43,47,48,49,50,51,52,86,89,91,92,93,118,119,136,137,143,144,145,146,147,149,],[-38,-41,-21,-22,-23,-24,-25,-35,-37,-42,-26,-27,-36,-28,-31,141,-29,-30,-4,148,-32,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit':([0,],[1,]),'external_declaration':([0,1,],[2,12,]),'include_header':([0,1,],[3,3,]),'function_definition':([0,1,],[4,4,]),'declaration':([0,1,22,42,],[5,5,45,88,]),'id_declaration':([0,1,22,42,],[8,8,53,53,]),'init_declaration':([0,1,22,42,],[9,9,9,9,]),'arguments':([8,],[14,]),'compound_statement':([14,22,42,44,87,129,130,139,140,141,142,148,],[21,48,48,48,48,48,48,48,48,48,48,48,]),'expression':([16,22,35,42,44,56,61,81,87,95,96,97,120,124,128,129,130,131,139,140,141,142,148,],[24,54,83,54,54,94,98,113,54,54,121,122,54,132,135,54,54,138,54,54,54,54,54,]),'conditional_expression':([16,22,35,42,44,56,61,81,87,95,96,97,120,124,128,129,130,131,139,140,141,142,148,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'unary_expression':([16,22,28,29,35,42,44,56,61,71,81,87,95,96,97,120,124,128,129,130,131,139,140,141,142,148,],[26,26,76,77,26,26,26,26,26,106,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'term':([16,22,28,29,30,33,35,42,44,56,61,64,65,66,67,68,69,70,71,72,73,74,75,81,87,95,96,97,120,124,128,129,130,131,139,140,141,142,148,],[31,31,31,31,78,80,31,31,31,31,31,99,100,101,102,103,104,105,31,107,108,109,110,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'function_call':([16,22,28,29,35,42,44,56,61,71,81,87,95,96,97,120,124,128,129,130,131,139,140,141,142,148,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'factor':([16,22,28,29,30,33,35,42,44,56,61,64,65,66,67,68,69,70,71,72,73,74,75,81,87,95,96,97,120,124,128,129,130,131,139,140,141,142,148,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'args':([17,],[38,]),'empty':([17,145,],[39,147,]),'declaration_list':([22,],[42,]),'statement_list':([22,42,],[44,87,]),'statement':([22,42,44,87,129,130,139,140,141,142,148,],[46,46,90,90,136,137,143,144,145,146,149,]),'expression_statement':([22,42,44,87,95,120,128,129,130,139,140,141,142,148,],[49,49,49,49,120,128,134,49,49,49,49,49,49,49,]),'jump_statement':([22,42,44,87,129,130,139,140,141,142,148,],[50,50,50,50,50,50,50,50,50,50,50,]),'loop_statement':([22,42,44,87,129,130,139,140,141,142,148,],[51,51,51,51,51,51,51,51,51,51,51,]),'condition_statement':([22,42,44,87,129,130,139,140,141,142,148,],[52,52,52,52,52,52,52,52,52,52,52,]),'expression_list':([81,],[111,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','20153734_이정민.py',127),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_append','20153734_이정민.py',130),
  ('external_declaration -> include_header','external_declaration',1,'p_exteranal_declaration_header','20153734_이정민.py',135),
  ('empty -> <empty>','empty',0,'p_empty','20153734_이정민.py',138),
  ('include_header -> INCLUDE HEADER','include_header',2,'p_include_header','20153734_이정민.py',141),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_function','20153734_이정민.py',146),
  ('function_definition -> id_declaration arguments compound_statement','function_definition',3,'p_function_definition','20153734_이정민.py',149),
  ('arguments -> LPAREN args RPAREN','arguments',3,'p_arguments','20153734_이정민.py',154),
  ('args -> empty','args',1,'p_arg_list','20153734_이정민.py',157),
  ('args -> VOID','args',1,'p_arg_list','20153734_이정민.py',158),
  ('args -> INT ID','args',2,'p_arg_list','20153734_이정민.py',159),
  ('args -> INT ID COMMA INT ID','args',5,'p_arg_list','20153734_이정민.py',160),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_declaration','20153734_이정민.py',164),
  ('declaration -> init_declaration SEMI','declaration',2,'p_declaration','20153734_이정민.py',167),
  ('init_declaration -> id_declaration','init_declaration',1,'p_init_declaration','20153734_이정민.py',171),
  ('init_declaration -> id_declaration LBRACKET NUMBER RBRACKET','init_declaration',4,'p_init_declaration','20153734_이정민.py',172),
  ('init_declaration -> id_declaration EQUALS expression','init_declaration',3,'p_init_declaration','20153734_이정민.py',173),
  ('id_declaration -> VOID ID','id_declaration',2,'p_id_declaration','20153734_이정민.py',178),
  ('id_declaration -> INT ID','id_declaration',2,'p_id_declaration','20153734_이정민.py',179),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_semi','20153734_이정민.py',183),
  ('statement -> compound_statement','statement',1,'p_statement','20153734_이정민.py',186),
  ('statement -> expression_statement','statement',1,'p_statement','20153734_이정민.py',187),
  ('statement -> jump_statement','statement',1,'p_statement','20153734_이정민.py',188),
  ('statement -> loop_statement','statement',1,'p_statement','20153734_이정민.py',189),
  ('statement -> condition_statement','statement',1,'p_statement','20153734_이정민.py',190),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement','20153734_이정민.py',194),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement','20153734_이정민.py',195),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement','20153734_이정민.py',196),
  ('loop_statement -> FOR LPAREN expression_statement expression_statement expression_statement RPAREN statement','loop_statement',7,'p_loop_statement','20153734_이정민.py',200),
  ('loop_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','loop_statement',7,'p_loop_statement','20153734_이정민.py',201),
  ('loop_statement -> WHILE LPAREN expression RPAREN statement','loop_statement',5,'p_loop_statement','20153734_이정민.py',202),
  ('condition_statement -> IF LPAREN expression RPAREN statement ELSE statement empty','condition_statement',8,'p_condition_statement','20153734_이정민.py',209),
  ('condition_statement -> IF LPAREN expression RPAREN statement','condition_statement',5,'p_condition_statement','20153734_이정민.py',210),
  ('condition_statement -> IF LPAREN expression LOR expression RPAREN statement ELSE statement','condition_statement',9,'p_condition_statement','20153734_이정민.py',211),
  ('compound_statement -> LBRACE declaration_list RBRACE','compound_statement',3,'p_compound_statement','20153734_이정민.py',218),
  ('compound_statement -> LBRACE declaration_list statement_list RBRACE','compound_statement',4,'p_compound_statement','20153734_이정민.py',219),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compound_statement','20153734_이정민.py',220),
  ('compound_statement -> LBRACE RBRACE','compound_statement',2,'p_compound_statement','20153734_이정민.py',221),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','20153734_이정민.py',224),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','20153734_이정민.py',225),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement','20153734_이정민.py',230),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement','20153734_이정민.py',231),
  ('statement_list -> statement','statement_list',1,'p_statement_list','20153734_이정민.py',234),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','20153734_이정민.py',235),
  ('expression -> conditional_expression','expression',1,'p_expression','20153734_이정민.py',238),
  ('expression -> unary_expression EQUALS expression','expression',3,'p_expression','20153734_이정민.py',239),
  ('expression -> STRING','expression',1,'p_expression','20153734_이정민.py',240),
  ('unary_expression -> LNOT term','unary_expression',2,'p_cdd','20153734_이정민.py',244),
  ('function_call -> ID LPAREN expression_list RPAREN','function_call',4,'p_function_call','20153734_이정민.py',248),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','20153734_이정민.py',249),
  ('expression_list -> expression','expression_list',1,'p_expression_list','20153734_이정민.py',254),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','20153734_이정민.py',255),
  ('unary_expression -> function_call','unary_expression',1,'p_unary_expressions','20153734_이정민.py',258),
  ('expression -> PP unary_expression','expression',2,'p_ppmm','20153734_이정민.py',261),
  ('expression -> MM unary_expression','expression',2,'p_ppmm','20153734_이정민.py',262),
  ('expression -> unary_expression PP','expression',2,'p_ppmm','20153734_이정민.py',263),
  ('expression -> unary_expression MM','expression',2,'p_ppmm','20153734_이정민.py',264),
  ('unary_expression -> AND term','unary_expression',2,'p_expression_and','20153734_이정민.py',271),
  ('term -> ID','term',1,'p_expression_id','20153734_이정민.py',275),
  ('term -> ID LBRACKET NUMBER RBRACKET','term',4,'p_expression_id','20153734_이정민.py',276),
  ('term -> ID LBRACKET ID RBRACKET','term',4,'p_expression_id','20153734_이정민.py',277),
  ('term -> factor','term',1,'p_term_factor','20153734_이정민.py',282),
  ('factor -> NUMBER','factor',1,'p_factor_num','20153734_이정민.py',285),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','20153734_이정민.py',288),
  ('unary_expression -> term','unary_expression',1,'p_conditional_expr','20153734_이정민.py',293),
  ('unary_expression -> unary_expression LT term','unary_expression',3,'p_conditional_expr','20153734_이정민.py',294),
  ('unary_expression -> unary_expression LE term','unary_expression',3,'p_conditional_expr','20153734_이정민.py',295),
  ('unary_expression -> unary_expression GE term','unary_expression',3,'p_conditional_expr','20153734_이정민.py',296),
  ('unary_expression -> unary_expression GT term','unary_expression',3,'p_conditional_expr','20153734_이정민.py',297),
  ('unary_expression -> unary_expression EQ term','unary_expression',3,'p_conditional_expr','20153734_이정민.py',298),
  ('unary_expression -> unary_expression NE term','unary_expression',3,'p_conditional_expr','20153734_이정민.py',299),
  ('unary_expression -> unary_expression AND term','unary_expression',3,'p_conditional_expr','20153734_이정민.py',300),
  ('unary_expression -> unary_expression LAND unary_expression','unary_expression',3,'p_conditional_expr','20153734_이정민.py',301),
  ('unary_expression -> unary_expression PLUS term','unary_expression',3,'p_conditional_expr','20153734_이정민.py',302),
  ('unary_expression -> unary_expression TIMES term','unary_expression',3,'p_conditional_expr','20153734_이정민.py',303),
  ('unary_expression -> unary_expression MOD term','unary_expression',3,'p_conditional_expr','20153734_이정민.py',304),
  ('unary_expression -> unary_expression MINUS term','unary_expression',3,'p_conditional_expr','20153734_이정민.py',305),
  ('conditional_expression -> unary_expression','conditional_expression',1,'p_conditional_e','20153734_이정민.py',308),
]
